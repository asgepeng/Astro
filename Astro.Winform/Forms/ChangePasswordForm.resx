<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        GDfu/ze+tf12EAdIAAAAAElFTkSuQmCC
</value>
  </data>
</root>